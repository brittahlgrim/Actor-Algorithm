package pack1.ActorAlgorithm;

import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;

import pack1.ActorAlgorithm.SearchContracts.GetByIDResult.FilmographyDataObject;
import pack1.ActorAlgorithm.SearchContracts.Search.FullSearchResult;
import pack1.ActorAlgorithm.SearchContracts.Search.SearchResultItem;

public class ActorAlgorithm {
	static String apikey = "7d27ef57-ffa6-4140-8992-3a52dae6e68d";
	
	public static void main (String[] args) throws IOException, JAXBException {
	    System.out.println("hello world");
	    SearchResultItem actorSearchResult = searchActorByName("nicolas cage");
	    
	    String id = actorSearchResult.ID;
	    Iterable<FilmographyDataObject> films = getActorFilmIds(id).;
	}
	
	private static Iterable<FilmographyDataObject> getActorFilmIds(String actorId) throws IOException, JAXBException
	{
		String uri ="http://imdb.wemakesites.net/api/" + actorId + "?api_key=" + apikey;

		URL url = new URL(uri);
		HttpURLConnection connection =
		    (HttpURLConnection) url.openConnection();
		connection.setRequestMethod("GET");
		connection.setRequestProperty("Accept", "application/xml");

		JAXBContext jc = JAXBContext.newInstance(FullSearchResult.class);
		InputStream xml = connection.getInputStream();
		FullSearchResult actorByIdResult =
		    (FullSearchResult) jc.createUnmarshaller().unmarshal(xml);
		
		pack1.ActorAlgorithm.SearchContracts.GetByIDResult.SearchResultItem firstActorSearchResult = actorByIdResult.Data.Results.Names.iterator().next();
		
		
		
		connection.disconnect();
		
		return firstActorSearchResult;
	}
	
	private static SearchResultItem searchActorByName(String name) throws IOException, JAXBException
	{
		String uri ="http://imdb.wemakesites.net/api/search?q=" + name + "&api_key=" + apikey;

		URL url = new URL(uri);
		HttpURLConnection connection =
		    (HttpURLConnection) url.openConnection();
		connection.setRequestMethod("GET");
		connection.setRequestProperty("Accept", "application/xml");

		JAXBContext jc = JAXBContext.newInstance(FullSearchResult.class);
		InputStream xml = connection.getInputStream();
		FullSearchResult fullActorSearchResult =
		    (FullSearchResult) jc.createUnmarshaller().unmarshal(xml);
		
		SearchResultItem firstActorSearchResult = fullActorSearchResult.Data.Results.Names.iterator().next();
		
		connection.disconnect();
		
		return firstActorSearchResult;
	}
	
	
}
